package clock;

import javafx.application.Application;
import javafx.stage.Stage;
import javafx.geometry.Pos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.animation.Timeline;
import javafx.animation.KeyFrame;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.util.Duration;
import java.util.Calendar;
import java.util.GregorianCalendar;

import javafx.scene.control.Label;
import java.text.SimpleDateFormat;
import javafx.scene.input.KeyCode;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;

public class TimeButtonDemo extends Application {

	public static void main(String[] args) {
		launch(args);
	}

	protected BorderPane getPane() {

		BorderPane pane = new BorderPane(); // pane for containing buttons and clock

		HBox paneForButtons = new HBox(50); // pane for containing buttons
		// write code for buttons
		Button btLeft = new Button("12hr", new ImageView(new Image("/usa.jpg", 40, 25, false, false)));
		Button btRight = new Button("24hr", new ImageView(new Image("/eu.jpg", 40, 25, false, false)));
		paneForButtons.getChildren().addAll(btLeft, btRight);
		paneForButtons.setAlignment(Pos.CENTER);
		paneForButtons.setStyle("-fx-border-color: green");

		pane.setBottom(paneForButtons);

		Pane paneForText = new Pane();
		pane.setCenter(paneForText);

		DigitalClock clock = new DigitalClock(); // clock to be added to pane
		pane.setCenter(clock);

		// handle button clicks with lambdas
		btLeft.setOnMouseClicked(e -> clock.changeFormat12());
        btRight.setOnMouseClicked(e -> clock.changeFormat24());

		// handle keyboard presses with lambdas
        pane.setOnKeyPressed(e -> {
            switch (e.getCode()){
                // If up arrow was pressed.
                case UP:
                    // Set the clock's color to red,
                    clock.setTextFill(Color.RED);
                    break;
                // If down arrow was pressed,
                case DOWN:
                    // Set the text color to cyan.
                    clock.setTextFill(Color.CYAN);
                    break;
                // If enter was pressed,
                case ENTER:
                    // Set the text color to black.
                    clock.setTextFill(Color.BLACK);
                    break;
                // If left arrow was pressed,
                case LEFT:
                    // Change the clock's format to 12h.
                    clock.changeFormat12();
                    break;
                // If right arrow was pressed,
                case RIGHT:
                    // Change the clock's format to 24h.
                    clock.changeFormat24();
                    break;
                // If none of these keys were pressed, don't handle it.
            }
        });

        
        
		return pane;
	}

	public void start(Stage primaryStage) {
		// Create a scene and place it in the stage
		Scene scene = new Scene(getPane(), 250, 150);
		primaryStage.setTitle("ClockApplication"); // Set the stage title
		primaryStage.setScene(scene); // Place the scene in the stage
		primaryStage.show(); // Display the stage
	}

}

class DigitalClock extends Label {
	private Timeline animation;
	private Calendar time;
	SimpleDateFormat dateFormat =  new SimpleDateFormat("HH:mm:ss");


	public DigitalClock() {
		// get time and set text with lambda
		Calendar calendar = new GregorianCalendar();

		//change text font here
		setFont(new Font("Arial", 30));

		// set animation here
		animation = new Timeline(new KeyFrame(Duration.seconds(0), e -> setText(dateFormat.format(Calendar.getInstance().getTime()))), new KeyFrame(Duration.seconds(1)));
		animation.setCycleCount(Timeline.INDEFINITE);
		animation.play(); // Start animation
	}

	public void changeFormat24() {
		dateFormat = new SimpleDateFormat("HH:mm:ss");
		setText(dateFormat.format(Calendar.getInstance().getTime()));
	}

	public void changeFormat12() {
		dateFormat = new SimpleDateFormat("hh:mm:ss a");
		setText(dateFormat.format(Calendar.getInstance().getTime()));
	}

}
